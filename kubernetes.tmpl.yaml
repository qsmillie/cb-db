apiVersion: v1
kind: Namespace
metadata:
  name: ${NAMESPACE}
---
apiVersion: v1
kind: Service
metadata:
  name: ${APP_NAME}-discovery
  namespace: ${NAMESPACE}
  labels:
    app: ${APP_NAME}
spec:
  type: LoadBalancer
  sessionAffinity: ClientIP
  ports:
  - name: http
    port: 8091
    targetPort: http
  - name: https
    port: 18091
    targetPort: https
  selector:
    app: ${APP_NAME}
---
### this pod level service will allow Couchbase-SDK to connect to Couchbase
### your APP should live in the same cluster with Couchbase
apiVersion: v1
kind: Service
metadata:
  name: ${APP_NAME}
  namespace: ${NAMESPACE}
  labels:
    app: ${APP_NAME}
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  clusterIP: None
  ports:
  - name: http
    port: 8091
    targetPort: http
  - name: https
    port: 18091
    targetPort: https
  selector:
    app: ${APP_NAME}
---
apiVersion: v1
kind: Secret
metadata:
  name: ${APP_NAME}-secrets
  namespace: ${NAMESPACE}
  labels:
    app: ${APP_NAME}
type: Opaque
data:
  couchbase-password: "${BASE64_PASSWORD}"
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: ${APP_NAME}
  namespace: ${NAMESPACE}
  labels:
    app: ${APP_NAME}
spec:
  selector:
    matchLabels:
      app: ${APP_NAME}
  maxUnavailable: 1
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: ${APP_NAME}
  namespace: ${NAMESPACE}
  labels:
    app: ${APP_NAME}
spec:
  updateStrategy:
    type: RollingUpdate
  serviceName: "${APP_NAME}"
  replicas: ${REPLICAS}
  template:
    metadata:
      labels:
        app: ${APP_NAME}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9119"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - ${APP_NAME}
            topologyKey: kubernetes.io/hostname
      initContainers:
      - name: ulimit
        image: busybox
        imagePullPolicy: Always
        command: ["sh", "-c", "ulimit -n 40960 && ulimit -c 100000000 && ulimit -l 100000000"] # Since unlimited is not supported as a value, it sets the core and memlock values to 100 GB.  
        securityContext:
          privileged: true
      containers:
      - name: ${APP_NAME}
        image: travix/k8s-couchbase-6.0-community:latest
        imagePullPolicy: Always
        resources:
          limits:
            cpu: ${CPU_LIMIT}
            memory: ${MEMORY_LIMIT}
          requests:
            cpu: ${CPU_REQUEST}
            memory: ${MEMORY_REQUEST}
        ports:
        - name: http
          containerPort: 8091
        - name: https
          containerPort: 18091
        - containerPort: 8092
        - containerPort: 8093
        - containerPort: 8092
        - containerPort: 8093
        - containerPort: 8094
        - containerPort: 11209
        - containerPort: 11210
        - containerPort: 11211
        - containerPort: 4369
        - containerPort: 9998
        - containerPort: 9999
        - containerPort: 11207
        - containerPort: 11214
        - containerPort: 11215
        - containerPort: 9100
        - containerPort: 9101
        - containerPort: 9102
        - containerPort: 9103
        - containerPort: 9104
        - containerPort: 9105
        - containerPort: 18091
        - containerPort: 18092
        - containerPort: 18093
        - containerPort: 21100
        - containerPort: 21101
        - containerPort: 21299
        env:
        - name: "AUTOFAILOVER_TIMEOUT"
          value: "60"
        - name: "DISCOVERY_SERVICE"
          value: "${APP_NAME}-0.${APP_NAME}.${NAMESPACE}.svc.cluster.local"
        - name: "FTS_RAM_SIZE_MB"
          value: "256"
        - name: "INDEX_RAM_SIZE_MB"
          value: "256"
        - name: "USER"
          value: "Administrator"
        - name: "PASSWORD"
          valueFrom:
            secretKeyRef:
              name: ${APP_NAME}-secrets
              key: couchbase-password
        - name: "APP_NAME"
          value: "${APP_NAME}"
        - name: "RAM_SIZE_MB"
          value: "${RAM_SIZE_MB}"
        - name: "REBALANCE_ON_NODE_ADDITION"
          value: "1"
        - name: "SERVICES"
          value: "${SERVICES}"
        livenessProbe:
          exec:
            command: ['sh', '-c', '/liveness.sh']
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          exec:
            command: ['sh', '-c', '/readiness.sh']
          initialDelaySeconds: 10
          failureThreshold: 1
          periodSeconds: 2
        lifecycle:
          preStop:
            exec:
              command: ['sh', '-c', '/prestop.sh']
        volumeMounts:
        - name: ${APP_NAME}-data
          mountPath: /opt/couchbase/var
      - name: ${APP_NAME}-exporter
        image: travix/prometheus_couchbase_exporter:latest
        imagePullPolicy: Always
        env:
        - name: "COUCHBASE_URL"
          value: "http://127.0.0.1"
        - name: "COUCHBASE_PORT"
          value: "8091"
        - name: "COUCHBASE_USERNAME"
          value: "Administrator"
        - name: "COUCHBASE_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: ${APP_NAME}-secrets
              key: couchbase-password
        readinessProbe:
          tcpSocket:
            port: 9119
          initialDelaySeconds: 10
          timeoutSeconds: 15
          failureThreshold: 10
        resources:
          requests:
            cpu: 200m
            memory: 100Mi
          limits:
            cpu: 500m
            memory: 200Mi
        ports:
        - name: metrics
          containerPort: 9119
  volumeClaimTemplates:
  - metadata:
      name: ${APP_NAME}-data
      namespace: ${NAMESPACE}
      annotations:
        volume.beta.kubernetes.io/storage-class: "${STORAGE_CLASS}"
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: ${STORAGE_SIZE}
